/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FloorsFloorCodeRouteImport } from './routes/floors/$floorCode'
import { Route as BuildingsBuildingCodeRouteImport } from './routes/buildings/$buildingCode'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FloorsFloorCodeRoute = FloorsFloorCodeRouteImport.update({
  id: '/floors/$floorCode',
  path: '/floors/$floorCode',
  getParentRoute: () => rootRouteImport,
} as any)
const BuildingsBuildingCodeRoute = BuildingsBuildingCodeRouteImport.update({
  id: '/buildings/$buildingCode',
  path: '/buildings/$buildingCode',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/buildings/$buildingCode': typeof BuildingsBuildingCodeRoute
  '/floors/$floorCode': typeof FloorsFloorCodeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/buildings/$buildingCode': typeof BuildingsBuildingCodeRoute
  '/floors/$floorCode': typeof FloorsFloorCodeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/buildings/$buildingCode': typeof BuildingsBuildingCodeRoute
  '/floors/$floorCode': typeof FloorsFloorCodeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/buildings/$buildingCode' | '/floors/$floorCode'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/buildings/$buildingCode' | '/floors/$floorCode'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/buildings/$buildingCode'
    | '/floors/$floorCode'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BuildingsBuildingCodeRoute: typeof BuildingsBuildingCodeRoute
  FloorsFloorCodeRoute: typeof FloorsFloorCodeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/floors/$floorCode': {
      id: '/floors/$floorCode'
      path: '/floors/$floorCode'
      fullPath: '/floors/$floorCode'
      preLoaderRoute: typeof FloorsFloorCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/buildings/$buildingCode': {
      id: '/buildings/$buildingCode'
      path: '/buildings/$buildingCode'
      fullPath: '/buildings/$buildingCode'
      preLoaderRoute: typeof BuildingsBuildingCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BuildingsBuildingCodeRoute: BuildingsBuildingCodeRoute,
  FloorsFloorCodeRoute: FloorsFloorCodeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
