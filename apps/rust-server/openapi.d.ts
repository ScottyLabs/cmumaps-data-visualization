/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns top n (default 100) results by relevance to query */
        get: {
            parameters: {
                query: {
                    /** @description the user's query */
                    query: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successfully returned top n results */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example d65471a3-1f77-4412-9acd-6079bed4fa84 */
                            id: string;
                            /** @example CUC 220 */
                            nameWithSpace?: string;
                            /** @example Cohon University Center 220 */
                            fullNameWithSpace?: string;
                            labelPosition?: {
                                /** @example 40.44392022644891 */
                                latitude?: number;
                                /** @example -79.94220130436851 */
                                longitude?: number;
                            };
                            /** @example Food */
                            type?: string;
                            /** @example Au Bon Pain at Skibo Caf√©   ABP */
                            alias?: string;
                            /** @example 6 */
                            numTerms?: number;
                            floor?: {
                                /** @example CUC */
                                buildingCode?: string;
                                /** @example 2 */
                                level?: string;
                            };
                        }[];
                    };
                };
                400: components["responses"]["BadParam"];
                401: components["responses"]["UnauthorizedError"];
                /** @description internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/path": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns multiple options for paths from the start to end, with "precise" directions */
        get: {
            parameters: {
                query: {
                    /** @description a Waypoint (Coordinate, roomId, or buildingCode) */
                    start: string;
                    end: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successfully returned path + directions */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            fastest: components["schemas"]["path"];
                            outdoor?: components["schemas"]["path"];
                            indoor?: components["schemas"]["path"];
                        };
                    };
                };
                400: components["responses"]["BadParam"];
                401: components["responses"]["UnauthorizedError"];
                /** @description internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        path: components["schemas"]["navnode"][];
        navnode: {
            floor?: Record<string, never>;
            coordinate?: Record<string, never>;
            id?: string;
            /** @description This is not null if it marks a turn or event otherwise deemed notable by the instruction algorithm.  The most recent instructions should always be displayed */
            instruction?: string | null;
        };
    };
    responses: {
        /** @description Access token is missing or invalid */
        UnauthorizedError: {
            headers: {
                [name: string]: unknown;
            };
            content?: never;
        };
        /** @description Missing or invalid required parameter */
        BadParam: {
            headers: {
                [name: string]: unknown;
            };
            content?: never;
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
